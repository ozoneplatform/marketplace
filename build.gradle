import org.ozoneplatform.gradle.plugins.FunctionalTestGradlePlugin

buildscript {
    ext {
        grailsVersion = '3.3.2'
        gormVersion = '6.1.8.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://repo.grails.org/grails/core' }
        jcenter()
    }
    dependencies {
        classpath group: 'io.spring.gradle', name: 'dependency-management-plugin', version: '1.0.4.RELEASE'

        classpath group: 'org.grails', name: 'grails-gradle-plugin', version: grailsVersion

        classpath group: 'org.grails.plugins', name: 'hibernate5', version: gormVersion - ".RELEASE"
        classpath group: 'org.grails.plugins', name: 'database-migration', version: '3.0.3'

        classpath group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.21"
}

group 'org.ozoneplatform'
version '7.17.1-1'


apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'groovy'

apply plugin: 'war'

apply from: 'gradle/build-javascript-resources.gradle'
apply from: 'gradle/build-theme-resources.gradle'

apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'

apply plugin: FunctionalTestGradlePlugin


ext {
    elasticsearchVersion = '5.4.3'

    releaseVersion = version.toString().replaceFirst("-", ".")

    tomcatBundleStaging = "$buildDir/staging/bundle"
}


allprojects {

    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.grails.org/grails/core' }
        maven { url 'http://repository.springsource.com/maven/bundles/release' }
        maven { url 'http://repository.springsource.com/maven/bundles/external' }
        maven { url 'https://packages.atlassian.com/maven-3rdparty-legacy' }
    }

    dependencyManagement {
        imports {
            mavenBom 'org.grails:grails-bom:' + grailsVersion
            mavenBom 'org.ozoneplatform:ozone-classic-bom:7.17.2-0-SNAPSHOT'
        }

        applyMavenExclusions false
    }

}

grails {
    pathingJar = true

    plugins {
        compile project(':grails-elasticsearch-plugin')
        compile project(':grails-jersey1-plugin')
    }
}

configurations {
    customTomcat {}
    drivers {}
}

dependencies {
    // Ozone
    compile group: 'org.ozoneplatform', name: 'owf-appconfig', version: '0.9.1-0'
    compile group: 'org.ozoneplatform', name: 'owf-auditing', version: '1.3.2-0'
    compile group: 'org.ozoneplatform', name: 'owf-security', version: '4.0.4-0'
    compile group: 'org.ozoneplatform', name: 'owf-messaging', version: '1.19.1-0'

    customTomcat(group: 'org.ozoneplatform', name: 'owf-custom-tomcat', version: '1.2.3-1') {
        artifact {
            name = 'owf-custom-tomcat'
            type = 'zip'
        }
    }

    // Sub-modules
    compile project(':marketplace-extensions')

    // Spring Boot
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'

    provided group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'

    // Spring
    compile group: 'org.springframework.security', name: 'spring-security-cas'

    // Grails
    compile group: 'org.grails', name: 'grails-core'
    compile group: 'org.grails', name: 'grails-web-boot'
    compile group: 'org.grails', name: 'grails-logging'

    compile group: 'org.grails', name: 'grails-plugin-rest'
    compile group: 'org.grails', name: 'grails-plugin-databinding'
    compile group: 'org.grails', name: 'grails-plugin-i18n'
    compile group: 'org.grails', name: 'grails-plugin-services'
    compile group: 'org.grails', name: 'grails-plugin-url-mappings'
    compile group: 'org.grails', name: 'grails-plugin-interceptors'

    compile group: 'org.grails.plugins', name: 'cache'
    compile group: 'org.grails.plugins', name: 'cache-ehcache'
    compile group: 'org.ehcache', name: 'ehcache'
    compile group: 'net.sf.ehcache', name: 'ehcache'

    compile group: 'org.grails.plugins', name: 'async'
    compile group: 'org.grails.plugins', name: 'scaffolding'
    compile group: 'org.grails.plugins', name: 'events'
    compile group: 'org.grails.plugins', name: 'hibernate5'
    compile group: 'org.grails.plugins', name: 'gsp'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

    console group: 'org.grails', name: 'grails-console'

    profile group: 'org.grails.profiles', name: 'web'

    runtime group: 'org.glassfish.web', name: 'el-impl'
    runtime group: 'com.h2database', name: 'h2'
    runtime group: 'org.apache.tomcat', name: 'tomcat-jdbc'

    runtime group: 'org.postgresql', name: 'postgresql'
	runtime group: 'log4j', name: 'apache-log4j-extras', version: '1.0'

    drivers group: 'org.postgresql', name: 'postgresql'

    testCompile group: 'org.grails', name: 'grails-web-testing-support'
    testCompile group: 'org.grails', name: 'grails-gorm-testing-support'
    testCompile group: 'org.grails', name: 'grails-datastore-gorm-test'
    testCompile group: 'org.grails', name: 'grails-datastore-rest-client'
    testCompile group: 'org.grails', name: 'grails-test-mixins'

    testRuntime fileTree(dir: 'database/drivers', include: ['*.jar'])

    // Grails Plugins
    compile group: "org.grails.plugins", name: "grails-executor"
    compile group: "org.grails.plugins", name: 'feeds'

    compile group: 'org.grails.plugins', name: 'converters'
    compile group: 'org.grails.plugins', name: 'quartz'
    compile group: 'org.grails.plugins', name: 'grails-pretty-time'

    // Other
    compile group: 'com.google.code.findbugs', name: 'jsr305'

    compile group: 'com.google.guava', name: 'guava'

    compile group: 'org.hibernate', name: 'hibernate-core'
    compile group: 'org.hibernate', name: 'hibernate-ehcache'

    compile group: 'org.elasticsearch', name: 'elasticsearch'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser'

    compile group: 'org.apache.httpcomponents', name: 'httpcore'
    compile group: 'org.apache.httpcomponents', name: 'httpclient'

    compile group: 'commons-fileupload', name: 'commons-fileupload'

    compile 'xml-apis:xml-apis'
    compile ('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
        // exclude([group:"xml-apis"])
        exclude([group:"asm"])
        exclude([group:"groovy"])

        exclude([group:"http-core"])
        exclude([group:"httpclient"])
    }

    runtime group: 'net.sf.ehcache', name: 'ehcache-jgroupsreplication', version: '1.7'

    // Ruby Gems (to build themes)
    themeCompileGem group: 'rubygems', name: 'sass', version: '3.1.3'
    themeCompileGem group: 'rubygems', name: 'compass', version: '0.11.7'
}


bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always',
            '-Duser=testAdmin1',
            '-Ddisable.auto.recompile=false',
            '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005',
            '-Xverify:none')

    addResources = false
}

war {
    // Exclude the Spring .xml configuration files from the .war
    // They will be copied to the Tomcat classpath at /tomcat/libs
    rootSpec.exclude('ozone/marketplace/**/*.xml')
    rootSpec.exclude('ozone/marketplace/**/*.properties')
}

idea {
    module {
        excludeDirs += file('src/main/resources/public')
    }
}

apply from: 'gradle/create-bundle.gradle'

apply from: 'gradle/report-test-coverage.gradle'

gitProperties {
    keys = ['git.branch',
            'git.commit.id',
            'git.commit.id.abbrev',
            'git.commit.time']

    dateFormat = "yyyy-MM-dd'T'HH\\:mm\\:ssX"
    dateFormatTimeZone = "GMT"
}

apply from: 'gradle/build-properties.gradle'


task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
